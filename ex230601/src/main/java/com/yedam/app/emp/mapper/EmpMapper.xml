<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yedam.app.emp.mapper.EmpMapper">

	<sql id="empWhere">
		<where>
		<if test="departmentId != null and departmentId != '' ">
			and department_id in
			<foreach open="(" close=")" collection="deptArr" item="dept" separator=",">
				#{dept}
			</foreach>
		</if>
		<if test="firstName != null and firstName != '' ">
			and first_name like '%${firstName}%'
		</if>
		</where>
	</sql>
	
	<insert id="insertEmp">
	<!-- insert into employees(employee_id, last_name, email, hire_date, job_id)
		values(#{employeeId}, #{lastName}, #{email}, #{hireDate}, #{jobId}) -->
		<selectKey keyProperty="employeeId" resultType="string" order="BEFORE">
			select max(employee_id) + 1
			from employees
		</selectKey>
		insert into employees(employee_id, first_name, last_name, email, hire_date, department_id, job_id)
		values(#{employeeId}, #{firstName}, #{lastName}, #{email}, #{hireDate}, #{departmentId}, #{jobId})
	</insert>
	
	<select id="selectCount" resultType="int">
		select count(*)
		from employees
		<include refid="empWhere"></include>
	</select>
	
	<select id="selectList" resultType="empVO">
		select employee_id, first_name, last_name, email, TO_CHAR(hire_date, 'yyyy-mm-dd') hire_date, job_id, department_id
		from employees
		<include refid="empWhere"></include>
	<choose>
		<when test="orderColumn != null and orderColumn != '' ">
			order by ${orderColumn}
		</when>
		<otherwise>
			order by employee_id
		</otherwise>
	</choose>
	</select>
	
	<select id="selectOne" parameterType="int" resultType="EmpVO">
		select employee_id, first_name, last_name, TO_CHAR(hire_date, 'yyyy-mm-dd') hire_date, 
				email, phone_number, job_id, salary, commission_pct, manager_id, department_id
		from employees
		where employee_id = #{empNo}
	</select>
	
	<select id="selectJobs" resultType="map">
		select job_id "jobId", job_title "jobTitle"
		from jobs
		order by job_title
	</select>
	
	<select id="selectDept" resultType="map">
		select department_id "deptId", department_name "deptName"
		from departments
		order by department_name
	</select>
	
	<update id="updateEmp">
		update employees 
		set first_name = #{firstName}, last_name = #{lastName}, email = #{email}, 
			hire_date = #{hireDate}, department_id = #{departmentId}, job_id = #{jobId}
		where employee_id = #{employeeId}
	</update>
	
	<delete id="deleteEmp">
		delete from employees
		where employee_id = #{employeeId}
	</delete>
	
</mapper>