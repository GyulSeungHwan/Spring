<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-5.2.xsd">
	<security:http pattern="/css/**" security="none" />
	<!-- security가 적용되지 않는 부분들(웹사이트에서 정적인 파일들을 가져올때) -->
	<!-- 위에서 아래로 순차적으로 진행함 -->
	<security:http>
		<security:intercept-url pattern="/top.jsp"
			access="permitAll()" />
		<!-- permitAll() - 인증 X -->
		<security:intercept-url pattern="/admin/**"
			access="hasAuthority('ROLE_ADMIN')" />
		<security:intercept-url pattern="/**"
			access="isAuthenticated()" />
		<!-- isAuthenticated() - 권한 상관없이 들어갈 수 있게 하는 것 -->
		<!-- /** = 기타, 이 문장이 위로 가버리면 위의 문장들이 실행되지 않는다 -->
		<security:form-login default-target-url="/top.jsp" />
		<security:logout logout-url="/logout"
			logout-success-url="/top.jsp" />
		<!-- <security:csrf disabled="true" /> -->
	</security:http>
	
	<bean id="userDetailService" class="com.yedam.app.user.service.CustomerUserDetailService" />

	<security:authentication-manager>
		<security:authentication-provider>
			<security:user-service>
				<security:user name="user" password="{noop}1234"
					authorities="ROLE_USER" />
				<security:user name="admin" password="{noop}1234"
					authorities="ROLE_ADMIN" />
			</security:user-service>
		</security:authentication-provider>
	</security:authentication-manager>

	<security:authentication-manager>
		<security:authentication-provider user-service-ref="userDetailService">
			<!-- <security:jdbc-user-service data-source-ref="dataSource" 
				users-by-username-query="SELECT login_id, '{noop}' || password, 1 
										 FROM t_user
										 WHERE login_id = ?" 
				authorities-by-username-query="SELECT login_id, role_name
											   FROM t_user JOIN t_user_role
											   ON t_user.id = t_user_role.user_id
														   JOIN t_role
											   ON t_user_role.role_id = t_role.id
											   WHERE login_id = ?" /> -->
		</security:authentication-provider>
	</security:authentication-manager>

</beans>
